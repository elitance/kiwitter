@import url('colors.css');
/* @import url('https://rsms.me/inter/inter.css'); */
@supports (font-variation-settings: normal) {
   html { font-family: 'Inter var', sans-serif; }
}

* {
   font-family: -apple-system, BlinkMacSystemFont, Inter, Noto Sans KR;
   box-sizing: border-box;
   outline: none;
   user-select: none;
}

body {
   margin: 0;
   overflow: hidden;
}

a {
   color: inherit;
   text-decoration: none;
}

h3, h4, h5, h6 {
   font-weight: 600;
}

i {
   font-style: normal;
}

button:focus, a:focus {
   box-shadow: 0 0 0 4px var(--main-color-trnp);
}

.logo {
   pointer-events: none;
   height: 40px;
}

.input {
   display: flex;
   height: 50px;
   margin: 40px 0 40px 0;
   align-items: center;
   transition: filter .2s;
}

.input .input-inner {
   display: flex;
   justify-content: flex-end;
   align-self: flex-end;
   flex-direction: column-reverse;
}

.input input {
   display: block;
   padding: 0 10px 5px 5px;
   border: none;
   width: 320px;
   background: none;
   border-bottom: 1.8px solid #757575;
   font-size: 18px;
   transition: border-bottom-color .2s;
}

.input label {
   margin: 0 0 -22.5px 5px;
   color: #999;
   font-size: 18px;
   pointer-events: none;
   transition: margin .2s, font-size .2s, color .2s;
}

.input input:focus {
   border-bottom-color: var(--main-color);
}

.input input:focus ~ label, .input input:valid ~ label {
   margin: 0 0 3px 0;
   font-size: 14px;
}

.input input:focus ~ label {
   color: var(--main-color);
}

.input i {
   font-size: 14px;
   cursor: help;
}

.input i:hover ~ .details {
   filter: opacity(1);
}

.input .details {
   display: inline-block;
   margin-left: 10px;
   font-size: 14px;
   background: rgba(0,0,0,.7);
   border-radius: 2px;
   color: white;
   filter: opacity(0);
   padding: 5px;
   transition: filter .25s;
}

button.unfill, button.fill, a.button-fill, a.button-unfill {
   height: 50px;
   width: 200px;
   font-size: 18px;
   font-weight: 500;
   border-radius: 25px;
   cursor: pointer;
   transition: background .2s, filter .2s, box-shadow .2s;
}

button > img {
   height: 50%;
}

.loading {
   pointer-events: none;
}

button.fill.loading {
   background: var(--main-color-extra-trnp);
   pointer-events: none;
}

button.unfill, a.button-unfill {
   border: 1.5px solid var(--main-color);
   background: none;
   color: var(--main-color);
}

button.fill, a.button-fill {
   border: none;
   background: var(--main-color);
   color: white;
}

button.fill i {
   margin-right: 5px;
}

button.unfill:hover, a.button-unfill:hover {
   background: var(--main-color-extra-trnp);
}

button.fill:hover, a.button-fill:hover {
   background: var(--main-color-drk);
}

a.text {
   color: var(--main-color);
   box-shadow: none !important;
}

a.text:hover {
   text-decoration: underline;
}

a.button-fill, a.button-unfill, a.link-menu {
   display: flex;
   align-items: center;
   justify-content: center;
}

a.link-menu {
   font-size: 18px;
   font-weight: 600;
   padding: 0 25px 0 25px;
   transition: background .2s, color .2s, box-shadow .2s;
}

a.link-menu:hover {
   color: var(--main-color-drk);
   background: var(--main-color-extra-trnp);
}

a.link-menu:focus {
   box-shadow: 0 0 0 4px var(--main-color-trnp);
}

span.addit {
   display: block;
   font-size: 15px;
   white-space: pre;
   margin: 15px 0 15px 0;
   filter: opacity(1);
   transition: filter .2s;
}

.alert {
   position: absolute;
   top: -70px;
   display: flex;
   align-items: center;
   justify-content: center;
   width: 500px;
   height: 50px;
   background: #ffffff99;
   border: 1.5px solid white;
   backdrop-filter: blur(6px);
   border-radius: 5px;
   transition: top .3s;
}

.alert.fail, .alert.success {
   color: white;
}

.alert.success {
   background: #2ea44f99;
   border-color: #2ea44f;
}

.alert.fail {
   background: #cb243199;
   border-color: #cb2431;
}

.alert.shown {
   top: 15px;
}

.hidden {
   filter: opacity(0);
}

span.addit i, .alert i {
   margin-right: 5px;
   font-style: normal;
}

span.fail {
   color: #cb2431;
}

span.success {
   color: #2ea44f;
}

.tweet {
   user-select: initial;
}